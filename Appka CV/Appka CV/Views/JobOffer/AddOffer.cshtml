@model int

<p style="margin-top: 100px; margin-left: 40px; font-family: Roboto; font-size: 64px; color:white;">Dodaj ofertę</p>
<form class="cvform" style="grid-template-rows: auto;" id="info" action="#">

    <div class="cvexpand2" style="grid-row-gap: 30px">
        <div class="cvline1" style="grid-column: 1 / span 2; margin-top: 20px;"></div>
        <div class="wyksztalcenie" style="height: 30px;">Firma:</div>
        <select class="wyksztalcenietext" style="height: 30px; width: 150px;" id="companies" data-bind="readSelectedText: company">
            <option disabled selected>Wybierz firmę</option>
        </select>
        <div class="umiejetnosci" style="grid-row: 3; grid-column: 1;">Tytuł:</div>
        <div style="grid-row:3; grid-column:2; width: 700px; display: flex;">
            <input type="text" style="margin-left: 60px; margin-right: 30px; width: 400px;" id="title" name="title" data-bind="value: jobTitle">
        </div>
        <div class="zainteresowania">Opis:</div>
        <textarea style="margin-left: 60px; width: 700px; height: 170px;" id="description"></textarea>
        <div class="jezyki">Kategoria:</div>
        <input type="text" style="margin-left: 60px; width: 400px;" id="category" data-bind="value: category">
        <div class="adres">Pozycja:</div>
        <input type="text" style="margin-left: 60px; width: 400px;" id="position" data-bind="value: position">
        <div class="adres" style="grid-column: 1; grid-row: 7;">Zarobki:</div>
        <input type="text" style="margin-left: 60px; width: 400px;" id="salaryFrom" data-bind="value: salaryFrom">
        <div class="adres" style="grid-column: 1; grid-row: 8;">Miasto:</div>
        <input type="text" style="margin-left: 60px; width: 400px;" id="city" data-bind="value: city">
        <div class="cvline2" style="grid-column: 1 / span 2; grid-row: 9;"></div>
        <div class="adres" style="grid-column: 1; grid-row: 10; margin-bottom: 20px;">Logo firmy:</div>
        <input type="file" id="file">
        <div style="grid-row: 11; grid-column-start: span 2; display:flex; justify-content: center;">
            <div class="oferta" style="margin-top: 0px;">
                <div class="logo"><img id="img" style="width: 100%; height: 100%;"></div>
                <div class="workcontent">
                    <div class="worktitle" data-bind="text: jobTitle"></div>
                    <div class="firma" data-bind="text: company"></div>
                    <div class="addressicon"><img src="~/obrazki/address.png"></div>
                    <div class="categoryicon"><img src="~/obrazki/kategoria.png"></div>
                    <div class="positionicon"><img src="~/obrazki/pozycja.png"></div>
                    <div class="cashicon"><img src="~/obrazki/gotowka.png"></div>
                    <div class="address" data-bind="text: city"></div>
                    <div class="category" data-bind="text: category"></div>
                    <div class="position" data-bind="text: position"></div>
                    <div class="cash" data-bind="text: salaryFrom"></div>
                </div>
            </div>
        </div>
        @if (Model == 0)
        {
            <button type="button" style="margin-right: 100px; margin-bottom: 50px; background: #3BB55D; box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); border: none; font-family: Roboto; width: 170px;
                    height: 40px; color: white; font-weight: bold; grid-column: 2; justify-self: end; margin-bottom: 20px; margin-right: 20px;" class="offerButton">
                Dodaj
            </button>
        }
        else
        {
            <button type="button" style="margin-right: 100px; margin-bottom: 50px; background: #3BB55D; box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25); border: none; font-family: Roboto; width: 170px;
                    height: 40px; color: white; font-weight: bold; grid-column: 2; justify-self: end; margin-bottom: 20px; margin-right: 20px;" class="offerButton">
                Zapisz
            </button>
        }

    </div>
</form>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.0.3.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.0/knockout-min.js"></script>
<script>
    var info = @Model;
    var uri;
    var fileData = "";
    var fileName = "";
    if (info == 0) uri = '@Startup.Configuration["ApiAddress"]' + '/api/JobOffers';
    else uri = '@Startup.Configuration["ApiAddress"]' + '/api/JobOffers/' + info;
    const inputElement = document.getElementById("file");
    inputElement.addEventListener("change", loadFile, false);

    function loadFile() {
        var reader = new FileReader();
        reader.onload = function () {
            fileData = reader.result;
            document.getElementById("img").src = reader.result;
        };
        reader.readAsDataURL(document.getElementById("file").files[0]);
    }

    var companiesRequest = $.ajax({
        url: '@Startup.Configuration["ApiAddress"]' + '/api/Companies',
        type: 'GET',
        contentType: 'application/json; charset=utf-8',
        async: false
    });
    var request = $.ajax({
        url: uri,
        type: 'GET',
        contentType: 'application/json; charset=utf-8'
    });

    ko.bindingHandlers.readSelectedText = {
      init: function(element, valueAccessor) {
        var value = valueAccessor();

        $(element).change(function() {
          value($("option:selected", this).text());
        });
      },
      update: function(element, valueAccessor) {}
    };

    $(document).ready(function () {
        companiesRequest.done(function (data) {
            $.each(data, function (key, item) {
                $("#companies").append($("<option></option>").text(item.name).val(item.id));
            });
        });
        if (info != 0) {
            request.done(function (data) {
                document.getElementById("companies").value = data.company.id;
                document.getElementById("title").setAttribute('value', data.jobTitle);
                document.getElementById("description").innerHTML = data.description;
                document.getElementById("category").setAttribute('value', data.category);
                document.getElementById("position").setAttribute('value', data.position);
                document.getElementById("salaryFrom").setAttribute('value', data.salaryFrom);
                document.getElementById("city").setAttribute('value', data.city);
                document.getElementById("img").src = data.fileData;
                fileName = data.fileName;
                fileData = data.fileData;
                ko.applyBindings(new AppViewModel());
            });
        }
        else ko.applyBindings(new AppViewModel());

        $('#info').validate({ // initialize plugin
        // rules & options,
            rules: {
                title: {
                    required: true
                }
            },
            messages: {
                title: {
                    required: "Tytuł nie może być pusty."
                }
            },
            submitHandler: function (form) {
                if (@Model == 0) addOffer();
                else editOffer(@Model);
                return false;  // blocks regular submit since you have ajax
            }
        });

        $('.offerButton').on('click', function () {
            $('#info').submit();
        });

    });

    
    function AppViewModel() {
        this.jobTitle = ko.observable(document.getElementById("title").getAttribute('value'));
        this.category = ko.observable(document.getElementById('category').getAttribute('value'));
        this.position = ko.observable(document.getElementById('position').getAttribute('value'));
        this.salaryFrom = ko.observable(document.getElementById('salaryFrom').getAttribute('value'));
        this.city = ko.observable(document.getElementById('city').getAttribute('value'));
        var company = document.getElementById("companies");
        var companyId = company.value;
        var companyName = company.options[company.selectedIndex].text;
        this.company = ko.observable(companyName);
    }


    function addOffer() {
        var jobTitle = document.getElementById("title").value;
        var description = document.getElementById("description").value;
        var category = document.getElementById("category").value;
        var position = document.getElementById("position").value;
        var salaryFrom = document.getElementById("salaryFrom").value;
        var city = document.getElementById("city").value;
        var company = document.getElementById("companies");
        var companyId = company.value;
        var companyName = company.options[company.selectedIndex].text;
        if (typeof (document.getElementById("file").files[0]) != 'undefined') {
            fileName = document.getElementById("file").files[0].name;
        }
        else {
            fileName = "";
            fileData = "";
        }
        $.ajax({
            url: uri,
            type: 'POST',
            data: JSON.stringify({
                jobTitle: jobTitle,
                description: description,
                category: category,
                position: position,
                salaryFrom: salaryFrom,
                city: city,
                company: {
                    id: companyId,
                    name: companyName
                },
                hr: '@User.Claims.FirstOrDefault(x => x.Type == "emails")?.Value',
                fileData: fileData,
                fileName: fileName

            }),
            contentType: 'application/json; charset=utf-8',
            success: function(result) { window.alert("Dodano ofertę!"); },
            error: function (result) { window.alert("Nie udało się dodać oferty."); }
        })
    }

    function editOffer(id) {
        var jobTitle = document.getElementById("title").value;
        var description = document.getElementById("description").value;
        var category = document.getElementById("category").value;
        var position = document.getElementById("position").value;
        var salaryFrom = document.getElementById("salaryFrom").value;
        var city = document.getElementById("city").value;
        var company = document.getElementById("companies");
        var companyId = company.value;
        var companyName = company.options[company.selectedIndex].text;
        if (typeof (document.getElementById("file").files[0]) != 'undefined') {
            fileName = document.getElementById("file").files[0].name;
        }
        $.ajax({
            url: uri,
            type: 'PUT',
            data: JSON.stringify({
                id: id,
                jobTitle: jobTitle,
                description: description,
                category: category,
                position: position,
                salaryFrom: salaryFrom,
                city: city,
                company: {
                    id: companyId,
                    name: companyName
                },
                hr: '@User.Claims.FirstOrDefault(x => x.Type == "emails")?.Value',
                fileData: fileData,
                fileName: fileName
            }),
            contentType: 'application/json; charset=utf-8',
            success: function(result) { window.alert("Zmieniono ofertę!"); },
            error: function (result) { window.alert("Nie udało się zmienić oferty."); }
        })
    }
</script>